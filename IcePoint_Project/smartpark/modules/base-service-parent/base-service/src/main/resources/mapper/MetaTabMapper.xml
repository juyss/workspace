<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icepoint.base.web.resource.mapper.MetaTabMapper">

    <sql id="query">
        SELECT
            a.id as 'id',
            a.resId as 'resId',
            a.tabType as 'tabType',
            a.tabCode as 'tabCode',
            a.name as 'name',
            a.nameEn as 'nameEn',
            a.busType as 'busType',
            a.description as 'description',
            a.serviceUrl as 'serviceUrl',
			a.serviceType as 'serviceType',
			a.reqParam as 'reqParam',
			a.displayType as 'displayType',
			a.status as 'status',
            a.appId as 'appId',
            a.ownerId as 'ownerId',
            a.createTime as 'createTime',
            a.createUser as 'createUser',
            a.updateTime as 'updateTime',
            a.updateUser as 'updateUser',
            a.deleted as 'deleted'
        FROM t_meta_tab a
    </sql>

    <insert id="save" parameterType="com.icepoint.base.api.entity.MetaTab">
        insert into t_meta_tab(
            id,
            resId,
            tabType,
            tabCode,
            name,
            nameEn,
            busType,
            description,
            serviceUrl,
			serviceType,
			reqParam,
			displayType,
            status,
            appId,
            ownerId,
            createTime,
            createUser,
            updateTime,
            updateUser,
            deleted
        )
        values(
            #{id},
            #{resId},
            #{tabType},
            #{tabCode},
            #{name},
            #{nameEn},
            #{busType},
            #{description},
            #{serviceUrl},
			#{serviceType},
			#{reqParam},
			#{displayType},
            #{status},
            #{appId},
            #{ownerId},
            #{createTime},
            #{createUser},
            #{updateTime},
            #{updateUser},
            #{deleted}
        )
    </insert>

    <update id="update" parameterType="com.icepoint.base.api.entity.MetaTab">
        update t_meta_tab
        set
            id = #{id},
            resId = #{resId},
            tabType = #{tabType},
            tabCode = #{tabCode},
            name = #{name},
            nameEn = #{nameEn},
            busType = #{busType},
            description = #{description},
            serviceUrl = #{serviceUrl},
			serviceType = #{v},
			reqParam = #{reqParam},
			displayType = #{displayType},
            status = #{status},
            appId = #{appId},
            ownerId = #{ownerId},
            createTime = #{createTime},
            createUser = #{createUser},
            updateTime = #{updateTime},
            updateUser = #{updateUser},
            deleted = #{deleted}
        where id = #{id}
    </update>

    <delete id="delete" parameterType="Long">
        delete from t_meta_tab
        where id = #{id}
    </delete>

    <select id="findById" parameterType="Long" resultType="com.icepoint.base.api.entity.MetaTab">
        <include refid="query"/>
        where a.id = #{id}
    </select>

    <select id="findAll" resultType="com.icepoint.base.api.entity.MetaTab">
        <include refid="query" />
        <include refid="where" />
    </select>

    <select id="find" resultType="com.icepoint.base.api.entity.MetaTab">
        <include refid="query" />
        <include refid="where" />
    </select>

    <sql id="where">
        <where>
            <if test="entity != null">
                <if test="!(entity.id == null || entity.id == '')">
                    and id = #{entity.id}
                </if>
                <if test="!(entity.resId == null || entity.resId == '')">
                    and resId = #{entity.resId}
                </if>
                <if test="!(entity.tabType == null || entity.tabType == '')">
                    and tabType = #{entity.tabType}
                </if>
                <if test="!(entity.tabCode == null || entity.tabCode == '')">
                    and tabCode = #{entity.tabCode}
                </if>
                <if test="!(entity.name == null || entity.name == '')">
                    and name = #{entity.name}
                </if>
                <if test="!(entity.nameEn == null || entity.nameEn == '')">
                    and nameEn = #{entity.nameEn}
                </if>
                <if test="!(entity.busType == null || entity.busType == '')">
                    and busType = #{entity.busType}
                </if>
                <if test="!(entity.description == null || entity.description == '')">
                    and description = #{entity.description}
                </if>
                <if test="!(entity.serviceUrl == null || entity.serviceUrl == '')">
                    and serviceUrl = #{entity.serviceUrl}
                </if>
                <if test="!(entity.serviceType == null || entity.serviceType == '')">
                    and serviceType = #{entity.serviceType}
                </if>
                <if test="!(entity.reqParam == null || entity.reqParam == '')">
                    and reqParam = #{entity.reqParam}
                </if>
                <if test="!(entity.displayType == null || entity.displayType == '')">
                    and displayType = #{entity.displayType}
                </if>
                <if test="!(entity.status == null || entity.status == '')">
                    and status = #{entity.status}
                </if>
                <if test="!(entity.appId == null || entity.appId == '')">
                    and appId = #{entity.appId}
                </if>
                <if test="!(entity.ownerId == null || entity.ownerId == '')">
                    and ownerId = #{entity.ownerId}
                </if>
                <if test="!(entity.createTime == null || entity.createTime == '')">
                    and createTime = #{entity.createTime}
                </if>
                <if test="!(entity.createUser == null || entity.createUser == '')">
                    and createUser = #{entity.createUser}
                </if>
                <if test="!(entity.updateTime == null || entity.updateTime == '')">
                    and updateTime = #{entity.updateTime}
                </if>
                <if test="!(entity.updateUser == null || entity.updateUser == '')">
                    and updateUser = #{entity.updateUser}
                </if>
                <if test="!(entity.deleted == null || entity.deleted == '')">
                    and deleted = #{entity.deleted}
                </if>
            </if>
        </where>
    </sql>
</mapper>